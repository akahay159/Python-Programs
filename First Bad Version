Problem:- https://leetcode.com/problems/first-bad-version/
'''
isBadVersion() function will return the version True or False
Approach Using Linear Search we can find out but the time complexity will be O(n).
So using Binary Search we can reduce the time complexity to O(logn)
Time Complexity=O(logn)
Space Complexity=O(1)
'''

class Solution:
    def firstBadVersion(self, n):
        """
        :type n: int
        :rtype: int
        """
        right,left=1,n
        while(left<right):
            mid=(left+right)//2
            if isBadVersion(mid):
                right=mid
            else:
                left=mid+1
        return left
